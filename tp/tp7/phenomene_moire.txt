// Une macro exemple qui fait un filtre passe-bas sur l'image.

//Le spectre du filtre est un disque binaire sur le plan de fourier.

//Le filtrage est appliqué par produit du spectre de la FFT de l'image avec le spectre du filtre

// l'image filtrée résulte de la FFT inverse

 
macro "filtrage passe-basFFT" {

open("../tp7/1024_moire_f1.jpg");

image = getImageID();

run("FFT", "title='FFT du moire'f");
// récupération de ID de la FFT
fourier = getImageID();

// récupération de la taille W x H du plan de Fourier
W = getWidth();
H = getHeight();

// calcul de la fréquence de coupure en cycle/pixel
// voir TP précédant pour les calcules
max_1 = 0; 
i_max_1 = 0;
j_max_1 = 0;
	
max_2 = 0; 
i_max_2 = 0;
j_max_2 = 0;

// Get the primary and secondary ray position
for (j=0; j<H; j++) 
{
	for (i=0; i<W; i++) 
	{
		p = getPixel(i,j);

		// get the primary ray
		if ( max_1 < p)
		{
			max_1 =p;
			i_max_1 = i;
			j_max_1 =j;
		} 

		// get the secondary ray
		if ( max_2 < p && max_1 > p)
		{
			max_2 =p;
			i_max_2 = i;
			j_max_2 =j;
		}
	}
}

// Calculating the distance between the primary ray and the second one
distance = sqrt(pow(i_max_2 - i_max_1, 2) + pow(j_max_2 - j_max_1, 2));

// Calculating the spatial frequency of the current image
omega = distance / sqrt(W*H);
print ( "omega =", omega);

// création d'un masque binaire
// fond noir

newImage("masque", "8-bit", W, H, 1);
masque = getImageID();
setColor(0);
makeRectangle (0,0, W,H);
fill();

// disque binaire
// en modifiant le rayon a 110 on obtient une image qui presente peut d'éffet de moirée
// car on inclue dans l'image sous échantillonnée sa haute fréquence
rayon = 110;

print ( "rayon =", rayon);
setColor(255);
makeOval (W/2-rayon,H/2-rayon, 2*rayon,2*rayon);
fill ();


// Filtrage passe-bas
imageCalculator("AND", fourier, masque);

selectImage (fourier);

}
